{"remainingRequest":"D:\\Snackstore\\node_modules\\babel-loader\\lib\\index.js!D:\\Snackstore\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Snackstore\\src\\utils\\filters.js","dependencies":[{"path":"D:\\Snackstore\\src\\utils\\filters.js","mtime":1624836882000},{"path":"D:\\Snackstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Snackstore\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Snackstore\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nvar digitsRE = /(\\d{3})(?=\\d)/g;\nexport function factPrice(value, discount) {\n  value = parseFloat(value);\n  discount = parseFloat(discount);\n  if (!discount) return value;\n  return value * discount;\n}\nexport function currency(value, currency, decimals) {\n  value = parseFloat(value);\n  if (!isFinite(value) || !value && value !== 0) return '';\n  currency = currency != null ? currency : '￥';\n  decimals = decimals != null ? decimals : 2;\n  var stringified = Math.abs(value).toFixed(decimals);\n\n  var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\n  var i = _int.length % 3;\n  var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\n  var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\n  var sign = value < 0 ? '-' : '';\n  return sign + currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n}\nexport function formatTime(value) {\n  return value.toLocaleString().replace(/T/g, ' ').replace(/\\.[\\d]{3}Z/, '');\n}",{"version":3,"sources":["D:/Snackstore/src/utils/filters.js"],"names":["digitsRE","factPrice","value","discount","parseFloat","currency","decimals","isFinite","stringified","Math","abs","toFixed","_int","slice","i","length","head","_float","sign","replace","formatTime","toLocaleString"],"mappings":";AAAA,IAAMA,QAAQ,GAAG,gBAAjB;AAEA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,QAA1B,EAAmC;AACxCD,EAAAA,KAAK,GAAGE,UAAU,CAACF,KAAD,CAAlB;AACAC,EAAAA,QAAQ,GAAGC,UAAU,CAACD,QAAD,CAArB;AACA,MAAG,CAACA,QAAJ,EAAc,OAAOD,KAAP;AACd,SAAOA,KAAK,GAAGC,QAAf;AACD;AAED,OAAO,SAASE,QAAT,CAAmBH,KAAnB,EAA0BG,QAA1B,EAAoCC,QAApC,EAA8C;AACnDJ,EAAAA,KAAK,GAAGE,UAAU,CAACF,KAAD,CAAlB;AACA,MAAI,CAACK,QAAQ,CAACL,KAAD,CAAT,IAAqB,CAACA,KAAD,IAAUA,KAAK,KAAK,CAA7C,EAAiD,OAAO,EAAP;AACjDG,EAAAA,QAAQ,GAAGA,QAAQ,IAAI,IAAZ,GAAmBA,QAAnB,GAA8B,GAAzC;AACAC,EAAAA,QAAQ,GAAGA,QAAQ,IAAI,IAAZ,GAAmBA,QAAnB,GAA8B,CAAzC;AACA,MAAIE,WAAW,GAAGC,IAAI,CAACC,GAAL,CAASR,KAAT,EAAgBS,OAAhB,CAAwBL,QAAxB,CAAlB;;AACA,MAAIM,IAAI,GAAGN,QAAQ,GACfE,WAAW,CAACK,KAAZ,CAAkB,CAAlB,EAAqB,CAAC,CAAD,GAAKP,QAA1B,CADe,GAEfE,WAFJ;;AAGA,MAAIM,CAAC,GAAGF,IAAI,CAACG,MAAL,GAAc,CAAtB;AACA,MAAIC,IAAI,GAAGF,CAAC,GAAG,CAAJ,GACNF,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcC,CAAd,KAAoBF,IAAI,CAACG,MAAL,GAAc,CAAd,GAAkB,GAAlB,GAAwB,EAA5C,CADM,GAEP,EAFJ;;AAGA,MAAIE,MAAM,GAAGX,QAAQ,GACjBE,WAAW,CAACK,KAAZ,CAAkB,CAAC,CAAD,GAAKP,QAAvB,CADiB,GAEjB,EAFJ;;AAGA,MAAIY,IAAI,GAAGhB,KAAK,GAAG,CAAR,GAAY,GAAZ,GAAkB,EAA7B;AACA,SAAOgB,IAAI,GAAGb,QAAP,GAAkBW,IAAlB,GACLJ,IAAI,CAACC,KAAL,CAAWC,CAAX,EAAcK,OAAd,CAAsBnB,QAAtB,EAAgC,KAAhC,CADK,GAELiB,MAFF;AAGD;AAID,OAAO,SAASG,UAAT,CAAoBlB,KAApB,EAA0B;AAC7B,SAAOA,KAAK,CAACmB,cAAN,GAAuBF,OAAvB,CAA+B,IAA/B,EAAqC,GAArC,EAA0CA,OAA1C,CAAkD,YAAlD,EAAgE,EAAhE,CAAP;AACH","sourcesContent":["const digitsRE = /(\\d{3})(?=\\d)/g\r\n\r\nexport function factPrice(value, discount){\r\n  value = parseFloat(value);\r\n  discount = parseFloat(discount);\r\n  if(!discount) return value\r\n  return value * discount;\r\n}\r\n\r\nexport function currency (value, currency, decimals) {\r\n  value = parseFloat(value)\r\n  if (!isFinite(value) || (!value && value !== 0)) return ''\r\n  currency = currency != null ? currency : '￥'\r\n  decimals = decimals != null ? decimals : 2\r\n  var stringified = Math.abs(value).toFixed(decimals)\r\n  var _int = decimals\r\n    ? stringified.slice(0, -1 - decimals)\r\n    : stringified\r\n  var i = _int.length % 3\r\n  var head = i > 0\r\n    ? (_int.slice(0, i) + (_int.length > 3 ? ',' : ''))\r\n    : ''\r\n  var _float = decimals\r\n    ? stringified.slice(-1 - decimals)\r\n    : ''\r\n  var sign = value < 0 ? '-' : ''\r\n  return sign + currency + head +\r\n    _int.slice(i).replace(digitsRE, '$1,') +\r\n    _float\r\n}\r\n\r\n\r\n\r\nexport function formatTime(value){\r\n    return value.toLocaleString().replace(/T/g, ' ').replace(/\\.[\\d]{3}Z/, '');\r\n}"]}]}