{"remainingRequest":"D:\\Snackstore\\node_modules\\babel-loader\\lib\\index.js!D:\\Snackstore\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Snackstore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Snackstore\\src\\views\\Commodities.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Snackstore\\src\\views\\Commodities.vue","mtime":1716478672631},{"path":"D:\\Snackstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Snackstore\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Snackstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Snackstore\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:/Snackstore/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport commodityList from \"../components/CommodityList\";\nimport Dialog from \"../components/Dialog.vue\";\nexport default {\n  name: 'commodity',\n  components: {\n    commodityList: commodityList,\n    Dialog: Dialog\n  },\n  data: function data() {\n    return {\n      commodities: [],\n      message: '',\n      sortType: 1,\n      //0为降序，1位升序\n      currentPage: 1,\n      //当前页数\n      total: 0,\n      //总条数\n      pageSize: 10,\n      //页面大小，默认一页有10条\n      pageSizes: [10],\n      //分页数量\n      state: {\n        //记录当前排序状态\n        index: -1,\n        key: \"\"\n      },\n      form: {},\n      //dialog组件传值,深拷贝后的\n      item: {},\n      //商品card中的原值\n      dialogVisible: false //dialog默认不显示           \n\n    };\n  },\n  computed: _objectSpread({}, mapState('user', ['user', 'sell'])),\n  created: function created() {\n    var url = this.$route.fullPath;\n\n    if (url.indexOf(\"/home\") != -1) {\n      this.getCommoditiesByHome();\n    } else if (url.indexOf(\"/shop\") != -1) {\n      this.getCommoditiesByShop(this.sell.id);\n    }\n  },\n  //分类商品、搜索结果、商家店铺商品都使用同一组件，但向服务端请求的接口不同，所以定义setRequestUrl方法来动态设置请求的URL \n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      vm.title = to.meta.title;\n\n      if (to.fullPath.indexOf(\"/searchOrder\") != -1) {\n        var keyword = to.query.keyword;\n        vm.getCommoditiesBySearch(keyword);\n      } else if (to.path.indexOf(\"/shop\") != -1) {\n        vm.getCommoditiesByShop(to.params.id);\n      } else {\n        vm.getCommoditiesByKind(to.params.id);\n      }\n    });\n  },\n  beforeRouteUpdate: function beforeRouteUpdate(to, from, next) {\n    //在当前路由改变，但是该组件被复用时调用\n    if (to.fullPath.indexOf(\"/searchOrder\") != -1) {\n      var keyword = to.query.keyword;\n      this.getCommoditiesBySearch(keyword);\n    } else if (to.path.indexOf(\"/shop\") != -1) {\n      this.getCommoditiesByShop(to.params.id);\n    } else {\n      this.getCommoditiesByKind(to.params.id);\n    }\n\n    next(); //该函数之后组件实例才会被创建\n  },\n  //分类商品、搜索结果、商家店铺商品都使用同一组件，但向服务端请求的接口不同，所以定义不同的接口\n  methods: {\n    getCommoditiesByHome: function getCommoditiesByHome() {\n      var _this = this;\n\n      //获取主页商品\n      this.axios.get('/commodity', {\n        params: {\n          page: this.currentPage\n        }\n      }).then(function (response) {\n        if (response.status == 200) {\n          _this.commodities = response.data.data.records;\n          _this.total = response.data.data.total;\n        }\n      });\n    },\n    getCommoditiesByKind: function getCommoditiesByKind(kindID) {\n      var _this2 = this;\n\n      //类别使用的方法\n      this.axios.post(\"/commodity/searchOrder\", {\n        kind_id: [kindID]\n      }).then(function (response) {\n        if (response.data.code == 0) {\n          _this2.commodities = response.data.data.records;\n          _this2.total = response.data.data.total;\n        }\n      }).catch(function (error) {\n        return alert(error);\n      });\n    },\n    getCommoditiesBySearch: function getCommoditiesBySearch(keyword) {\n      var _this3 = this;\n\n      //搜索框使用该方法\n      this.axios.post(\"/commodity/searchOrder\", {\n        \"keyword\": [keyword]\n      }).then(function (response) {\n        if (response.status == 200) {\n          _this3.commodities = response.data.data.records;\n          _this3.total = response.data.data.total;\n        }\n      }).catch(function (error) {\n        return alert(error);\n      });\n    },\n    getCommoditiesByShop: function getCommoditiesByShop(shopID) {\n      var _this4 = this;\n\n      //获取店铺商品\n      this.axios.post(\"/commodity/searchOrder\", {\n        shop_id: [shopID]\n      }).then(function (response) {\n        if (response.data.code == 0) {\n          _this4.commodities = response.data.data.records;\n          _this4.total = response.data.data.total;\n        }\n      }).catch(function (error) {\n        return alert(error);\n      });\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      console.log(\"每页条数：\" + val);\n    },\n    //当前页改变，获取当前页的商品\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n\n      if (this.state.index != -1) {\n        //说明处于排序状态\n        if (this.state.key == 'price' && this.state.index == 0) this.getCommodityList('0', this.state.key, this.state.index);else this.getCommodityList('1', this.state.key, this.state.index);\n      } else this.getCommoditiesByHome();\n    },\n    //向前翻页\n    prevPage: function prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n\n        if (this.state.index != -1) {\n          if (this.state.key == 'price' && this.state.index == 0) this.getCommodityList('0', this.state.key, this.state.index);else this.getCommodityList('1', this.state.key, this.state.index);\n        } else this.getCommoditiesByHome();\n      }\n    },\n    //向后翻页\n    nextPage: function nextPage() {\n      if (this.currentPage < this.total / this.pageSize) {\n        this.currentPage++;\n\n        if (this.state.index != -1) {\n          if (this.state.key == 'price' && this.state.index == 0) this.getCommodityList('0', this.state.key, this.state.index);else this.getCommodityList('1', this.state.key, this.state.index);\n        } else this.getCommoditiesByHome();\n      }\n    },\n    handleGetCommodityList: function handleGetCommodityList(type, key, index) {\n      this.currentPage = 1; //切换排序时重置为第一页\n\n      this.getCommodityList(type, key, index);\n    },\n    //获取排序后的商品列表\n    getCommodityList: function getCommodityList(type, key, index) {\n      var _this5 = this;\n\n      this.state.index = index;\n      this.state.key = key;\n      this.changeButtonStyle(index);\n      var map = {};\n      map.page = [this.currentPage];\n      map.pageSize = [this.pageSize]; // 添加这一行\n\n      if (this.$route.fullPath.indexOf(\"/searchOrder\") != -1) {\n        //带关键词的排序\n        map.keyword = [this.$route.query.keyword];\n      } else if (this.$route.path.indexOf(\"/kind\") != -1) {\n        //类别商品的排序\n        map.kind_id = [this.$route.params.id];\n      } else if (this.$route.path.indexOf(\"/shop\") != -1) {\n        map.shop_id = [this.$route.params.id];\n      }\n\n      if (type == \"1\") {\n        map.desc = [key]; //降序 参数为关键词数组，可以对多个关键词进行排序\n      } else if (type == \"0\") {\n        map.asc = [key]; //升序\n      }\n\n      this.axios.post(\"/commodity/searchOrder\", map).then(function (response) {\n        if (response.status == 200) {\n          _this5.commodities = response.data.data.records;\n          _this5.total = response.data.data.total;\n        }\n      }).catch(function (error) {\n        return alert(error);\n      });\n    },\n    //点击按钮实现选中效果\n    changeButtonStyle: function changeButtonStyle(index) {\n      var bt = document.querySelectorAll(\"a.bt\"); //选择所有class=\"bt\"的a元素\n\n      for (var i = 0; i < bt.length; i++) {\n        if (index == i) {\n          bt[i].classList.add(\"curr\");\n        } else {\n          bt[i].classList.remove(\"curr\");\n        }\n      }\n    },\n    // 商家系统中的操作\n    //修改商品信息\n    updateCommodity: function updateCommodity(value) {\n      this.item = value;\n      this.form = Object.assign({}, value);\n      this.dialogVisible = true;\n    },\n    dialogHide: function dialogHide() {\n      this.dialogVisible = false;\n    },\n    update: function update(value) {\n      //更改原值，vuex\n      this.item = value;\n    }\n  }\n};",{"version":3,"sources":["Commodities.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"commodity\">\r\n        <!--商品排序-->\r\n        <h3 v-if=\"!commodities.length\">目前没有商品</h3>\r\n        <div v-if=\"commodities.length\">\r\n            <div class=\"commoidtySort\">\r\n                <div class=\"sort\">\r\n                    <a href=\"javascript:;\" class=\"bt curr\" @click=\"handleGetCommodityList(0,'price',0)\"><span>综合</span><i class=\"el-icon-d-caret\"></i></a>\r\n                    <a href=\"javascript:;\" class=\"bt\"  @click=\"handleGetCommodityList('1','inventory',1)\"><span>销量</span><i class=\"el-icon-d-caret\"></i></a>\r\n                    <a href=\"javascript:;\" class=\"bt\"  @click=\"handleGetCommodityList('1','evaluation_count',2)\"><span>评论数</span><i class=\"el-icon-d-caret\"></i></a>\r\n                    <a href=\"javascript:;\" class=\"bt\"  @click=\"handleGetCommodityList('1','price',3)\"><span>价格</span><i class=\"el-icon-d-caret\"></i>\r\n                        <!-- <em><i class=\"el-icon-caret-top\"></i><i class=\"el-icon-caret-bottom\"></i></em> -->\r\n                    </a>\r\n                </div>\r\n                <div class=\"selectPrice\">  \r\n                </div>\r\n                <div class=\"page\">\r\n                    <a href=\"javascript:;\" @click=\"prevPage\" class=\"prev\">&lt;</a>\r\n                    <a href=\"javascript:;\" @click=\"nextPage\" class=\"next\">&gt;</a>\r\n                </div>\r\n                <div class=\"result-sum\">\r\n                    共<span class=\"sum\">{{total}}+ </span>件商品 \r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <commodityList v-if=\"sell\" @update=\"update\" @updateCommodity='updateCommodity' :list = \"commodities\" :isNeedMask=\"true\" />   <!-- 商家加载 -->\r\n        <Dialog v-if=\"sell\" @update=\"update\" @dialogHide=\"dialogHide\" :dialogVisible=\"dialogVisible\" :addFlag=\"false\"  :form=\"form\"/>   <!-- 只有商家和管理员加载 -->\r\n\r\n\r\n        <commodityList v-if=\"!sell\" :list = \"commodities\"/>  <!-- 普通用户加载 -->\r\n\r\n        <h1>{{message}}</h1>\r\n        <el-pagination\r\n            :hide-on-single-page=\"commodities.length==0\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            @prev-click=\"handleCurrentChange\"\r\n            @next-click=\"handleCurrentChange\"\r\n            :current-page=currentPage\r\n            :page-sizes=pageSizes\r\n            :page-size=pageSize\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=total>\r\n        </el-pagination>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex';\r\nimport commodityList from '../components/CommodityList'\r\nimport Dialog from '../components/Dialog.vue'\r\nexport default {\r\n    name: 'commodity',\r\n    components: {\r\n      commodityList,Dialog\r\n    },\r\n    data(){\r\n        return {\r\n            commodities:[],\r\n            message: '',\r\n            sortType: 1,     //0为降序，1位升序\r\n            currentPage: 1,  //当前页数\r\n            total: 0, //总条数\r\n            pageSize: 10,  //页面大小，默认一页有10条\r\n            pageSizes: [10],  //分页数量\r\n            state:{ //记录当前排序状态\r\n                index: -1,\r\n                key: \"\"\r\n            },\r\n            form:{},//dialog组件传值,深拷贝后的\r\n            item:{},//商品card中的原值\r\n            dialogVisible: false,//dialog默认不显示           \r\n        }\r\n    },\r\n    computed:{\r\n        ...mapState('user',['user','sell']),\r\n    },\r\n    created(){\r\n        const url = this.$route.fullPath;\r\n        if(url.indexOf(\"/home\")!=-1){\r\n           this.getCommoditiesByHome();\r\n        }else if(url.indexOf(\"/shop\")!=-1){\r\n            this.getCommoditiesByShop(this.sell.id)\r\n        }\r\n    },\r\n    //分类商品、搜索结果、商家店铺商品都使用同一组件，但向服务端请求的接口不同，所以定义setRequestUrl方法来动态设置请求的URL \r\n   beforeRouteEnter(to, from, next){\r\n      next(vm => {\r\n        vm.title = to.meta.title;\r\n        if(to.fullPath.indexOf(\"/searchOrder\")!=-1){\r\n            let keyword = to.query.keyword;\r\n            vm.getCommoditiesBySearch(keyword);\r\n        }else if(to.path.indexOf(\"/shop\")!=-1){\r\n            vm.getCommoditiesByShop(to.params.id);\r\n        }else{\r\n            vm.getCommoditiesByKind(to.params.id);\r\n        }\r\n      });\r\n    },\r\n    \r\n    beforeRouteUpdate(to, from, next){\r\n        //在当前路由改变，但是该组件被复用时调用\r\n        if(to.fullPath.indexOf(\"/searchOrder\")!=-1){\r\n            let keyword = to.query.keyword;\r\n            this.getCommoditiesBySearch(keyword);\r\n        }else if(to.path.indexOf(\"/shop\")!=-1){\r\n            this.getCommoditiesByShop(to.params.id);\r\n        }else{\r\n            this.getCommoditiesByKind(to.params.id);\r\n        }\r\n        next(); //该函数之后组件实例才会被创建\r\n    },\r\n\r\n    //分类商品、搜索结果、商家店铺商品都使用同一组件，但向服务端请求的接口不同，所以定义不同的接口\r\n    methods:{\r\n        getCommoditiesByHome(){      //获取主页商品\r\n             this.axios.get('/commodity',{params:{page:this.currentPage}}).then(response => {\r\n                if(response.status == 200){\r\n                    this.commodities = response.data.data.records; \r\n                    this.total = response.data.data.total;\r\n                }\r\n            })\r\n        },\r\n\r\n        getCommoditiesByKind(kindID){       //类别使用的方法\r\n            this.axios.post(\"/commodity/searchOrder\",{kind_id:[kindID]}).then(response =>{\r\n                if(response.data.code==0){\r\n                    this.commodities = response.data.data.records;\r\n                    this.total = response.data.data.total;\r\n                }\r\n            }).catch(error => alert(error));\r\n        },\r\n\r\n        getCommoditiesBySearch(keyword){       //搜索框使用该方法\r\n            this.axios.post(\"/commodity/searchOrder\",{\"keyword\":[keyword]}).then(response =>{\r\n                if(response.status == 200){\r\n                    this.commodities = response.data.data.records;\r\n                    this.total = response.data.data.total;\r\n                }\r\n            }).catch(error => alert(error));\r\n        },\r\n\r\n        getCommoditiesByShop(shopID){   //获取店铺商品\r\n            this.axios.post(\"/commodity/searchOrder\",{shop_id:[shopID]}).then(response =>{\r\n                if(response.data.code==0){\r\n                    this.commodities = response.data.data.records;\r\n                    this.total = response.data.data.total;\r\n                }\r\n            }).catch(error => alert(error));\r\n        },\r\n\r\n        handleSizeChange(val){\r\n            console.log(\"每页条数：\"+val);\r\n        },\r\n\r\n        //当前页改变，获取当前页的商品\r\n        handleCurrentChange(val){\r\n            this.currentPage = val;\r\n            if(this.state.index != -1){   //说明处于排序状态\r\n                if(this.state.key == 'price' && this.state.index == 0)\r\n                    this.getCommodityList('0',this.state.key,this.state.index);\r\n                else this.getCommodityList('1',this.state.key,this.state.index);            \r\n            }else  \r\n                this.getCommoditiesByHome();\r\n        },\r\n        //向前翻页\r\n        prevPage(){\r\n            if(this.currentPage>1){\r\n                this.currentPage--;\r\n                if(this.state.index != -1){  \r\n                    if(this.state.key == 'price' && this.state.index == 0)\r\n                        this.getCommodityList('0',this.state.key,this.state.index);\r\n                    else this.getCommodityList('1',this.state.key,this.state.index);            \r\n                }else  \r\n                    this.getCommoditiesByHome();\r\n            }\r\n        },\r\n        //向后翻页\r\n        nextPage(){\r\n            if(this.currentPage<(this.total/this.pageSize)){\r\n                this.currentPage++;\r\n                if(this.state.index != -1){  \r\n                    if(this.state.key == 'price' && this.state.index == 0)\r\n                        this.getCommodityList('0',this.state.key,this.state.index);\r\n                    else this.getCommodityList('1',this.state.key,this.state.index);            \r\n                }else  \r\n                    this.getCommoditiesByHome();\r\n            }\r\n        },\r\n\r\n        handleGetCommodityList(type, key, index){\r\n            this.currentPage = 1;      //切换排序时重置为第一页\r\n            this.getCommodityList(type, key, index);\r\n        },\r\n        //获取排序后的商品列表\r\n        getCommodityList(type, key, index){\r\n            this.state.index = index;\r\n            this.state.key = key;\r\n            this.changeButtonStyle(index);\r\n            var map = {};\r\n            map.page = [this.currentPage];\r\n            map.pageSize = [this.pageSize];  // 添加这一行\r\n            if(this.$route.fullPath.indexOf(\"/searchOrder\")!=-1){   //带关键词的排序\r\n               map.keyword = [this.$route.query.keyword]\r\n            }\r\n            else if(this.$route.path.indexOf(\"/kind\")!=-1){  //类别商品的排序\r\n                map.kind_id = [this.$route.params.id]\r\n            }\r\n            else if(this.$route.path.indexOf(\"/shop\")!=-1){\r\n                map.shop_id = [this.$route.params.id]\r\n            }\r\n            if(type==\"1\"){\r\n                map.desc = [key]     //降序 参数为关键词数组，可以对多个关键词进行排序\r\n            }else if(type == \"0\"){\r\n                map.asc = [key]  //升序\r\n            }\r\n            this.axios.post(\"/commodity/searchOrder\", map).then(response => {\r\n                if(response.status == 200){\r\n                    this.commodities = response.data.data.records;\r\n                    this.total = response.data.data.total;\r\n                }\r\n            }).catch(error => alert(error));\r\n        },\r\n\r\n        //点击按钮实现选中效果\r\n        changeButtonStyle(index){\r\n            var bt = document.querySelectorAll(\"a.bt\");     //选择所有class=\"bt\"的a元素\r\n            for(let i=0;i<bt.length;i++){\r\n                if(index == i){\r\n                    bt[i].classList.add(\"curr\");\r\n                }else{\r\n                    bt[i].classList.remove(\"curr\");\r\n                }\r\n            }\r\n        },\r\n\r\n\r\n        // 商家系统中的操作\r\n        //修改商品信息\r\n        updateCommodity(value){\r\n            this.item = value;\r\n            this.form = Object.assign({},value);\r\n            this.dialogVisible = true;\r\n        },\r\n        dialogHide(){\r\n            this.dialogVisible = false;\r\n        },\r\n        update(value){    //更改原值，vuex\r\n            this.item = value;\r\n        },\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.commodity{\r\n    width: 1200px;\r\n    margin: 0 auto;\r\n    padding-bottom: 50px;\r\n    font-size: 12px;\r\n}\r\n.commodity .commoidtySort{\r\n    padding: 6px 8px;\r\n    border-bottom: 1px solid #E7E3E7;\r\n    background: #F1F1F1;\r\n    overflow: hidden;\r\n}\r\n.commodity .commoidtySort .sort .curr{\r\n    border-color: #e4393c;\r\n    background: #e4393c;\r\n    color: #FFF;\r\n}\r\n.commoidtySort .sort a{\r\n    float: left;\r\n    padding: 0 9px;\r\n    height: 23px;\r\n    border: 1px solid #CCC;\r\n    line-height: 23px;\r\n    text-decoration: none;\r\n    color: black;\r\n}\r\n.commoidtySort .result-sum{\r\n    float: right;\r\n    height: 25px;\r\n    line-height: 25px;\r\n    margin-right: 10px;\r\n    margin-right: 10px;\r\n    color: #999;\r\n}\r\n\r\n.commoidtySort .result-sum .sum{\r\n    color: #666;\r\n    font-family: verdana;\r\n}\r\n.commoidtySort .sort a:hover{\r\n    color: red;\r\n    border-color: red;\r\n}\r\n.commoidtySort .page{\r\n    float: right;\r\n}\r\n.commoidtySort .page a:hover{\r\n    border-color: rgb(233, 103, 103);\r\n}\r\n.commoidtySort .page .prev,.next{\r\n    display: inline-block;\r\n    width: 46px;\r\n    height: 23px;\r\n    border: 1px solid #DDD;\r\n    background: #FFF;\r\n    line-height: 23px;\r\n    font-family: \"\\5b8b\\4f53\";\r\n    text-align: center;\r\n    font-size: 16px;\r\n    color: #AAA;\r\n    text-decoration: none;\r\n}\r\n</style>"],"sourceRoot":"src/views"}]}