{"remainingRequest":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\babel-loader\\lib\\index.js!D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SpringBootVueSecondShop\\client\\Snackstore\\src\\views\\Order.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\src\\views\\Order.vue","mtime":1717318271535},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"D:/SpringBootVueSecondShop/client/Snackstore/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nexport default {\n  name: \"order\",\n  data: function data() {\n    return {\n      orders: []\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.axios.get(\"/order/user/\" + this.user.id, {\n      params: {\n        page: 1\n      }\n    }).then(function (response) {\n      if (response.status == 200) {\n        _this.orders = response.data.data.records;\n      }\n    });\n  },\n  computed: _objectSpread({}, mapState('user', ['user'])),\n  methods: {\n    filterTag: function filterTag(value, row) {\n      return row.status === value;\n    },\n    //付款\n    handlePay: function handlePay(row) {\n      var _this2 = this;\n\n      this.$confirm(\"确认支付?\").then(function () {\n        _this2.axios.post(\"/order/pay\", [row]).then(function (response) {\n          if (response.data.code == 0) {\n            _this2.$message({\n              type: 'success',\n              message: \"支付成功！\"\n            });\n\n            row.status = 2;\n          } else {\n            _this2.$message(response.data.msg);\n          }\n        }).catch(function () {\n          (function (error) {\n            return alert(error);\n          });\n        });\n      }).catch(function () {});\n    },\n    //取消订单\n    handleCancelPay: function handleCancelPay(row) {\n      var _this3 = this;\n\n      this.$confirm(\"确认取消清单?\").then(function () {\n        var old = row.status;\n        row.status = 1;\n        var ordEndTime = row.endTime;\n        row.endTime = _this3.formatDate(new Date(), 'YY-MM-DD hh:mm:ss');\n\n        _this3.axios.post(\"/order/update\", row).then(function (response) {\n          if (response.data.code == 0) {\n            _this3.$message({\n              type: 'success',\n              message: \"取消订单成功！\"\n            });\n          } else {\n            _this3.$message(response.data.msg);\n\n            row.status = old;\n            row.endTime = ordEndTime;\n          }\n        }).catch(function () {\n          (function (error) {\n            return alert(error);\n          });\n        });\n      }).catch(function () {});\n    },\n    //退货\n    handleReturnGoods: function handleReturnGoods(row) {\n      var _this4 = this;\n\n      this.$confirm(\"确认提交退货申请?\").then(function () {\n        var old = row.status;\n        row.status = 5;\n\n        _this4.axios.post(\"/order/update\", row).then(function (response) {\n          if (response.data.code == 0) {\n            _this4.$message({\n              type: 'success',\n              message: \"申请退货成功，请等待商家回应！\"\n            });\n          } else {\n            _this4.$message(response.data.msg);\n\n            row.status = old;\n          }\n        }).catch(function () {\n          (function (error) {\n            return alert(error);\n          });\n        });\n      }).catch(function () {});\n    },\n    //取消退货\n    handleCancelReturn: function handleCancelReturn(row) {\n      var _this5 = this;\n\n      this.$confirm(\"确认取消退货? 确认后订单不能再次退货！\").then(function () {\n        var oldStatus = row.status;\n        row.status = 8;\n        var ordEndTime = row.endTime;\n        row.endTime = _this5.formatDate(new Date(), 'YY-MM-DD hh:mm:ss');\n\n        _this5.axios.post(\"/order/update\", row).then(function (response) {\n          if (response.data.code == 0) {\n            _this5.$message({\n              type: 'success',\n              message: \"取消退货成功，该订单已完成！\"\n            });\n          } else {\n            _this5.$message(response.data.msg);\n\n            row.status = oldStatus;\n            row.endTime = ordEndTime;\n          }\n        }).catch(function () {\n          (function (error) {\n            return alert(error);\n          });\n        });\n      }).catch(function () {});\n    },\n    //确认订单\n    handleConfirm: function handleConfirm(row) {\n      var _this6 = this;\n\n      this.$confirm(\"确认订单已完成？\").then(function () {\n        var old = row.status;\n        row.status = 8;\n        var ordEndTime = row.endTime;\n        row.endTime = _this6.formatDate(new Date(), 'YY-MM-DD hh:mm:ss');\n\n        _this6.axios.post(\"/order/update\", row).then(function (response) {\n          if (response.data.code == 0) {\n            _this6.$message({\n              type: 'success',\n              message: \"确认成功，该订单已完成！\"\n            });\n          } else {\n            _this6.$message(response.data.msg);\n\n            row.status = old;\n            row.endTime = ordEndTime;\n          }\n        }).catch(function () {\n          (function (error) {\n            return alert(error);\n          });\n        });\n      }).catch(function () {});\n    },\n    //判断订单处于哪一阶段，显示该阶段的操作\n    determineType: function determineType(status, operation) {\n      if (operation == \"付款\") {\n        if (status == 0) return true;\n      } else if (operation == \"取消订单\") {\n        if (status == 0) return true;\n      } else if (operation == \"退货\") {\n        if (status == 4 || status == 3) return true;\n      } else if (operation == \"取消退货\") {\n        if (status == 5) return true;\n      } else {\n        if (status == 4 || status == 6 || status == 3) return true;\n      }\n\n      return false;\n    },\n    //格式化时间\n    //      formatDate(new Date().getTime());//2017-05-12 10:05:44\n    //      formatDate(new Date().getTime(),'YY年MM月DD日');//2017年05月12日\n    //      formatDate(new Date().getTime(),'今天是YY/MM/DD hh:mm:ss');//今天是2017/05/12 10:07:45\n    formatDate: function formatDate(time) {\n      var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'YY-MM-DD hh:mm:ss';\n      var date = new Date(time);\n      var year = date.getFullYear(),\n          month = date.getMonth() + 1,\n          //月份是从0开始的\n      day = date.getDate(),\n          hour = date.getHours(),\n          min = date.getMinutes(),\n          sec = date.getSeconds();\n      var preArr = Array.apply(null, Array(10)).map(function (elem, index) {\n        return '0' + index;\n      }); ////开个长度为10的数组 格式为 00 01 02 03       \n\n      var newTime = format.replace(/YY/g, year).replace(/MM/g, preArr[month] || month).replace(/DD/g, preArr[day] || day).replace(/hh/g, preArr[hour] || hour).replace(/mm/g, preArr[min] || min).replace(/ss/g, preArr[sec] || sec);\n      return newTime;\n    }\n  },\n  filters: {\n    formatStatus: function formatStatus(val) {\n      var value = \"\";\n\n      switch (val) {\n        case 0:\n          value = \"待支付\";\n          break;\n\n        case 1:\n          value = \"已取消\";\n          break;\n\n        case 2:\n          value = \"待发货\";\n          break;\n\n        case 3:\n          value = \"运输中\";\n          break;\n\n        case 4:\n          value = \"已收货\";\n          break;\n\n        case 5:\n          value = \"退货审核中\";\n          break;\n\n        case 6:\n          value = \"已退货\";\n          break;\n\n        case 7:\n          value = \"拒绝退货\";\n          break;\n\n        case 8:\n          value = \"已完成\";\n          break;\n      }\n\n      return value;\n    }\n  }\n};",{"version":3,"sources":["Order.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"order\">\r\n        <el-table :data=\"orders\" stripe style=\"width: 100%\">\r\n            <el-table-column width=\"30\"></el-table-column>\r\n            <el-table-column prop=\"commodityId\"  label=\"商品ID\"  width=\"80\"></el-table-column>\r\n            <el-table-column prop=\"quantity\"  label=\"数量\"  width=\"80\"></el-table-column>\r\n            <el-table-column prop=\"amount\" label=\"总价\"  width=\"100\"></el-table-column>\r\n            <el-table-column  prop=\"creatTime\" label=\"订单开始时间\" width=\"200\"></el-table-column>\r\n            <el-table-column prop=\"endTime\" label=\"订单结束时间\"  width=\"200\"></el-table-column>\r\n            <el-table-column prop=\"status\" label=\"标签\" width=\"140\"\r\n                :filters=\"[{ text: '待支付', value: 0}, { text: '取消订单', value: 1 },\r\n                            { text: '待发货', value: 2}, { text: '已收货', value: 4 },\r\n                            { text: '退货审核中', value: 5 },{ text: '已退货', value: 6},\r\n                            { text: '拒绝退货', value: 7},{ text: '已完成', value: 8} ]\"\r\n                :filter-method=\"filterTag\"\r\n                filter-placement=\"bottom-end\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-tag\r\n                    :type=\"scope.row.status === 8 ? 'success' : 'primary'\"\r\n                    disable-transitions>{{scope.row.status | formatStatus }}</el-tag>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"用户操作\" width=\"200\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button v-if=\"determineType(scope.row.status,'付款')\" size=\"mini\" type=\"danger\" @click=\"handlePay(scope.row)\">付款</el-button>\r\n                    <el-button v-if=\"determineType(scope.row.status,'取消订单')\" size=\"mini\"  @click=\"handleCancelPay(scope.row)\">取消订单</el-button>\r\n                    <el-button v-if=\"determineType(scope.row.status,'退货')\" size=\"mini\" type=\"danger\"  @click=\"handleReturnGoods(scope.row)\">退货</el-button>\r\n                    <el-button v-if=\"determineType(scope.row.status,'确认订单')\" size=\"mini\"  @click=\"handleConfirm(scope.row)\">确认订单</el-button>\r\n                    <el-button v-if=\"determineType(scope.row.status,'取消退货')\" size=\"mini\"  @click=\"handleCancelReturn(scope.row)\">取消退货</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { mapState } from 'vuex'\r\nexport default {\r\n    name:\"order\",\r\n    data(){\r\n        return{\r\n            orders:[],\r\n        }\r\n    },\r\n    created(){\r\n        this.axios.get(\"/order/user/\"+this.user.id,{params:{page:1}}).then(response => {\r\n            if(response.status == 200){\r\n                this.orders = response.data.data.records;\r\n            }\r\n        })\r\n    },\r\n    computed:{\r\n        ...mapState('user',['user']),\r\n    },\r\n    methods:{\r\n        filterTag(value, row) {\r\n            return row.status === value;\r\n        },\r\n\r\n        //付款\r\n        handlePay(row){\r\n            this.$confirm(\"确认支付?\").then(() =>{\r\n                this.axios.post(\"/order/pay\",[row]).then(response => {\r\n                    if(response.data.code == 0){\r\n                        this.$message({type:'success',message:\"支付成功！\"})\r\n                        row.status = 2\r\n                    }else{\r\n                        this.$message(response.data.msg)\r\n                    }\r\n                }).catch(() => {error => alert(error)});\r\n            }).catch(()=>{})\r\n        },\r\n\r\n        //取消订单\r\n        handleCancelPay(row){\r\n            this.$confirm(\"确认取消清单?\").then(() =>{\r\n                 let old = row.status;\r\n                 row.status = 1\r\n                 let ordEndTime = row.endTime\r\n                 row.endTime = this.formatDate(new Date(),'YY-MM-DD hh:mm:ss')\r\n                 this.axios.post(\"/order/update\",row).then(response => {\r\n                    if(response.data.code == 0){\r\n                        this.$message({type:'success',message:\"取消订单成功！\"})\r\n                    }else{\r\n                        this.$message(response.data.msg)\r\n                        row.status = old\r\n                        row.endTime = ordEndTime\r\n                    }\r\n                }).catch(() => {error => alert(error)});\r\n            }).catch(()=>{})\r\n        },\r\n\r\n        //退货\r\n        handleReturnGoods(row){\r\n            this.$confirm(\"确认提交退货申请?\").then(() =>{\r\n                 let old = row.status;\r\n                 row.status = 5\r\n                 this.axios.post(\"/order/update\",row).then(response => {\r\n                    if(response.data.code == 0){\r\n                        this.$message({type:'success',message:\"申请退货成功，请等待商家回应！\"})\r\n                    }else{\r\n                        this.$message(response.data.msg)\r\n                        row.status = old\r\n                    }\r\n                }).catch(() => {error => alert(error)});\r\n            }).catch(()=>{})\r\n        },\r\n        \r\n        //取消退货\r\n        handleCancelReturn(row){\r\n            this.$confirm(\"确认取消退货? 确认后订单不能再次退货！\").then(() =>{\r\n                 let oldStatus = row.status;\r\n                 row.status = 8\r\n                 let ordEndTime = row.endTime\r\n                 row.endTime = this.formatDate(new Date(),'YY-MM-DD hh:mm:ss')\r\n                 this.axios.post(\"/order/update\",row).then(response => {\r\n                    if(response.data.code == 0){\r\n                        this.$message({type:'success',message:\"取消退货成功，该订单已完成！\"})\r\n                    }else{\r\n                        this.$message(response.data.msg)\r\n                        row.status = oldStatus\r\n                        row.endTime = ordEndTime\r\n                    }\r\n                }).catch(() => {error => alert(error)});\r\n            }).catch(()=>{})\r\n        },\r\n        //确认订单\r\n        handleConfirm(row){\r\n            this.$confirm(\"确认订单已完成？\").then(() =>{\r\n                 let old = row.status;\r\n                 row.status = 8\r\n                 let ordEndTime = row.endTime\r\n                 row.endTime = this.formatDate(new Date(),'YY-MM-DD hh:mm:ss')\r\n                 this.axios.post(\"/order/update\",row).then(response => {\r\n                    if(response.data.code == 0){\r\n                        this.$message({type:'success',message:\"确认成功，该订单已完成！\"})\r\n                    }else{\r\n                        this.$message(response.data.msg)\r\n                        row.status = old\r\n                        row.endTime = ordEndTime\r\n                    }\r\n                }).catch(() => {error => alert(error)});\r\n            }).catch(()=>{})\r\n        },\r\n        \r\n        //判断订单处于哪一阶段，显示该阶段的操作\r\n        determineType(status, operation){\r\n            if(operation == \"付款\"){\r\n                if(status == 0) return true\r\n            }else if(operation == \"取消订单\"){\r\n                if(status == 0) return true\r\n            }else if(operation == \"退货\"){\r\n                if(status == 4 || status == 3) return true\r\n            }else if(operation == \"取消退货\"){\r\n                if(status == 5) return true\r\n            }else{\r\n                if(status == 4 || status == 6 || status == 3) return true\r\n            }\r\n            return false\r\n        },\r\n\r\n        //格式化时间\r\n//      formatDate(new Date().getTime());//2017-05-12 10:05:44\r\n//      formatDate(new Date().getTime(),'YY年MM月DD日');//2017年05月12日\r\n//      formatDate(new Date().getTime(),'今天是YY/MM/DD hh:mm:ss');//今天是2017/05/12 10:07:45\r\n        formatDate(time,format='YY-MM-DD hh:mm:ss'){\r\n            var date = new Date(time);\r\n        \r\n            var year = date.getFullYear(),\r\n                month = date.getMonth()+1,//月份是从0开始的\r\n                day = date.getDate(),\r\n                hour = date.getHours(),\r\n                min = date.getMinutes(),\r\n                sec = date.getSeconds();\r\n            var preArr = Array.apply(null,Array(10)).map(function(elem, index) {\r\n                return '0'+index;\r\n            });////开个长度为10的数组 格式为 00 01 02 03       \r\n            var newTime = format.replace(/YY/g,year)\r\n                                .replace(/MM/g,preArr[month]||month)\r\n                                .replace(/DD/g,preArr[day]||day)\r\n                                .replace(/hh/g,preArr[hour]||hour)\r\n                                .replace(/mm/g,preArr[min]||min)\r\n                                .replace(/ss/g,preArr[sec]||sec);        \r\n            return newTime;         \r\n        }\r\n    },\r\n    filters:{\r\n        formatStatus(val){\r\n            let value = \"\";\r\n            switch(val) {\r\n                case 0:\r\n                    value = \"待支付\";\r\n                    break;\r\n                case 1:\r\n                    value = \"已取消\";\r\n                    break;\r\n                case 2:\r\n                    value = \"待发货\";\r\n                    break;\r\n                case 3:\r\n                    value = \"运输中\";\r\n                    break;\r\n                case 4:\r\n                    value = \"已收货\";\r\n                    break;\r\n                case 5:\r\n                    value = \"退货审核中\";\r\n                    break;\r\n                case 6:\r\n                    value = \"已退货\";\r\n                    break;\r\n                case 7:\r\n                    value = \"拒绝退货\";\r\n                    break;\r\n                case 8:\r\n                    value = \"已完成\";\r\n                    break;                    \r\n            }\r\n            return value;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .order{\r\n        width: 1030px;\r\n        margin: 0 auto;\r\n        margin-top: 50px;\r\n    }\r\n</style>"],"sourceRoot":"src/views"}]}