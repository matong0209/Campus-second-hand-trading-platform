{"remainingRequest":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SpringBootVueSecondShop\\client\\Snackstore\\src\\components\\UserRegister.vue?vue&type=template&id=7874be84&","dependencies":[{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\src\\components\\UserRegister.vue","mtime":1713860986508},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"register\" },\n    [\n      _c(\n        \"el-form\",\n        {\n          ref: \"form\",\n          staticClass: \"demo-form\",\n          attrs: {\n            model: _vm.form,\n            \"status-icon\": \"\",\n            rules: _vm.rules,\n            \"label-width\": \"100px\"\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"用户名\", prop: \"name\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"text\", autocomplete: \"off\" },\n                model: {\n                  value: _vm.form.name,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"name\", $$v)\n                  },\n                  expression: \"form.name\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"密码\", prop: \"password\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"password\", autocomplete: \"off\" },\n                model: {\n                  value: _vm.form.password,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"password\", $$v)\n                  },\n                  expression: \"form.password\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"确认密码\", prop: \"checkPass\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"password\", autocomplete: \"off\" },\n                model: {\n                  value: _vm.form.checkPass,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"checkPass\", $$v)\n                  },\n                  expression: \"form.checkPass\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"电话\", prop: \"phone\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"tel\", autocomplete: \"off\" },\n                model: {\n                  value: _vm.form.phone,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"phone\", $$v)\n                  },\n                  expression: \"form.phone\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"邮箱\", prop: \"email\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"email\", autocomplete: \"off\" },\n                model: {\n                  value: _vm.form.email,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"email\", $$v)\n                  },\n                  expression: \"form.email\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"城市\", prop: \"city\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"text\", autocomplete: \"off\" },\n                model: {\n                  value: _vm.form.city,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"city\", $$v)\n                  },\n                  expression: \"form.city\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"性别\", prop: \"sex\" } },\n            [\n              _c(\n                \"el-radio-group\",\n                {\n                  model: {\n                    value: _vm.form.sex,\n                    callback: function($$v) {\n                      _vm.$set(_vm.form, \"sex\", $$v)\n                    },\n                    expression: \"form.sex\"\n                  }\n                },\n                [\n                  _c(\"el-radio\", { attrs: { label: \"0\" } }, [_vm._v(\"男\")]),\n                  _c(\"el-radio\", { attrs: { label: \"1\" } }, [_vm._v(\"女\")])\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"银行卡号\", prop: \"card\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"tel\", autocomplete: \"off\" },\n                model: {\n                  value: _vm.form.card,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"card\", $$v)\n                  },\n                  expression: \"form.card\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"验证码\", prop: \"imageValid\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { type: \"text\" },\n                model: {\n                  value: _vm.form.imageValid,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"imageValid\", $$v)\n                  },\n                  expression: \"form.imageValid\"\n                }\n              }),\n              _c(\"canvas\", {\n                ref: \"canvas\",\n                attrs: { id: \"canvas\", width: \"120\", height: \"40\" },\n                on: {\n                  click: function($event) {\n                    return _vm.updateCanvas()\n                  }\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.register(\"form\")\n                    }\n                  }\n                },\n                [_vm._v(\"提交\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function($event) {\n                      return _vm.resetForm(\"form\")\n                    }\n                  }\n                },\n                [_vm._v(\"重置\")]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"toMerchantRegister\" },\n        [\n          _c(\"router-link\", { attrs: { to: \"/sellRegister\" } }, [\n            _vm._v(\">商家注册\")\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}