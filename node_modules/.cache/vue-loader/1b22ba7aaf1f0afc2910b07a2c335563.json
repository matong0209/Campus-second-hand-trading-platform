{"remainingRequest":"D:\\Snackstore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Snackstore\\src\\views\\Commodities.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Snackstore\\src\\views\\Commodities.vue","mtime":1716478672631},{"path":"D:\\Snackstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Snackstore\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Snackstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Snackstore\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapState } from 'vuex';\r\nimport commodityList from '../components/CommodityList'\r\nimport Dialog from '../components/Dialog.vue'\r\nexport default {\r\n    name: 'commodity',\r\n    components: {\r\n      commodityList,Dialog\r\n    },\r\n    data(){\r\n        return {\r\n            commodities:[],\r\n            message: '',\r\n            sortType: 1,     //0为降序，1位升序\r\n            currentPage: 1,  //当前页数\r\n            total: 0, //总条数\r\n            pageSize: 10,  //页面大小，默认一页有10条\r\n            pageSizes: [10],  //分页数量\r\n            state:{ //记录当前排序状态\r\n                index: -1,\r\n                key: \"\"\r\n            },\r\n            form:{},//dialog组件传值,深拷贝后的\r\n            item:{},//商品card中的原值\r\n            dialogVisible: false,//dialog默认不显示           \r\n        }\r\n    },\r\n    computed:{\r\n        ...mapState('user',['user','sell']),\r\n    },\r\n    created(){\r\n        const url = this.$route.fullPath;\r\n        if(url.indexOf(\"/home\")!=-1){\r\n           this.getCommoditiesByHome();\r\n        }else if(url.indexOf(\"/shop\")!=-1){\r\n            this.getCommoditiesByShop(this.sell.id)\r\n        }\r\n    },\r\n    //分类商品、搜索结果、商家店铺商品都使用同一组件，但向服务端请求的接口不同，所以定义setRequestUrl方法来动态设置请求的URL \r\n   beforeRouteEnter(to, from, next){\r\n      next(vm => {\r\n        vm.title = to.meta.title;\r\n        if(to.fullPath.indexOf(\"/searchOrder\")!=-1){\r\n            let keyword = to.query.keyword;\r\n            vm.getCommoditiesBySearch(keyword);\r\n        }else if(to.path.indexOf(\"/shop\")!=-1){\r\n            vm.getCommoditiesByShop(to.params.id);\r\n        }else{\r\n            vm.getCommoditiesByKind(to.params.id);\r\n        }\r\n      });\r\n    },\r\n    \r\n    beforeRouteUpdate(to, from, next){\r\n        //在当前路由改变，但是该组件被复用时调用\r\n        if(to.fullPath.indexOf(\"/searchOrder\")!=-1){\r\n            let keyword = to.query.keyword;\r\n            this.getCommoditiesBySearch(keyword);\r\n        }else if(to.path.indexOf(\"/shop\")!=-1){\r\n            this.getCommoditiesByShop(to.params.id);\r\n        }else{\r\n            this.getCommoditiesByKind(to.params.id);\r\n        }\r\n        next(); //该函数之后组件实例才会被创建\r\n    },\r\n\r\n    //分类商品、搜索结果、商家店铺商品都使用同一组件，但向服务端请求的接口不同，所以定义不同的接口\r\n    methods:{\r\n        getCommoditiesByHome(){      //获取主页商品\r\n             this.axios.get('/commodity',{params:{page:this.currentPage}}).then(response => {\r\n                if(response.status == 200){\r\n                    this.commodities = response.data.data.records; \r\n                    this.total = response.data.data.total;\r\n                }\r\n            })\r\n        },\r\n\r\n        getCommoditiesByKind(kindID){       //类别使用的方法\r\n            this.axios.post(\"/commodity/searchOrder\",{kind_id:[kindID]}).then(response =>{\r\n                if(response.data.code==0){\r\n                    this.commodities = response.data.data.records;\r\n                    this.total = response.data.data.total;\r\n                }\r\n            }).catch(error => alert(error));\r\n        },\r\n\r\n        getCommoditiesBySearch(keyword){       //搜索框使用该方法\r\n            this.axios.post(\"/commodity/searchOrder\",{\"keyword\":[keyword]}).then(response =>{\r\n                if(response.status == 200){\r\n                    this.commodities = response.data.data.records;\r\n                    this.total = response.data.data.total;\r\n                }\r\n            }).catch(error => alert(error));\r\n        },\r\n\r\n        getCommoditiesByShop(shopID){   //获取店铺商品\r\n            this.axios.post(\"/commodity/searchOrder\",{shop_id:[shopID]}).then(response =>{\r\n                if(response.data.code==0){\r\n                    this.commodities = response.data.data.records;\r\n                    this.total = response.data.data.total;\r\n                }\r\n            }).catch(error => alert(error));\r\n        },\r\n\r\n        handleSizeChange(val){\r\n            console.log(\"每页条数：\"+val);\r\n        },\r\n\r\n        //当前页改变，获取当前页的商品\r\n        handleCurrentChange(val){\r\n            this.currentPage = val;\r\n            if(this.state.index != -1){   //说明处于排序状态\r\n                if(this.state.key == 'price' && this.state.index == 0)\r\n                    this.getCommodityList('0',this.state.key,this.state.index);\r\n                else this.getCommodityList('1',this.state.key,this.state.index);            \r\n            }else  \r\n                this.getCommoditiesByHome();\r\n        },\r\n        //向前翻页\r\n        prevPage(){\r\n            if(this.currentPage>1){\r\n                this.currentPage--;\r\n                if(this.state.index != -1){  \r\n                    if(this.state.key == 'price' && this.state.index == 0)\r\n                        this.getCommodityList('0',this.state.key,this.state.index);\r\n                    else this.getCommodityList('1',this.state.key,this.state.index);            \r\n                }else  \r\n                    this.getCommoditiesByHome();\r\n            }\r\n        },\r\n        //向后翻页\r\n        nextPage(){\r\n            if(this.currentPage<(this.total/this.pageSize)){\r\n                this.currentPage++;\r\n                if(this.state.index != -1){  \r\n                    if(this.state.key == 'price' && this.state.index == 0)\r\n                        this.getCommodityList('0',this.state.key,this.state.index);\r\n                    else this.getCommodityList('1',this.state.key,this.state.index);            \r\n                }else  \r\n                    this.getCommoditiesByHome();\r\n            }\r\n        },\r\n\r\n        handleGetCommodityList(type, key, index){\r\n            this.currentPage = 1;      //切换排序时重置为第一页\r\n            this.getCommodityList(type, key, index);\r\n        },\r\n        //获取排序后的商品列表\r\n        getCommodityList(type, key, index){\r\n            this.state.index = index;\r\n            this.state.key = key;\r\n            this.changeButtonStyle(index);\r\n            var map = {};\r\n            map.page = [this.currentPage];\r\n            map.pageSize = [this.pageSize];  // 添加这一行\r\n            if(this.$route.fullPath.indexOf(\"/searchOrder\")!=-1){   //带关键词的排序\r\n               map.keyword = [this.$route.query.keyword]\r\n            }\r\n            else if(this.$route.path.indexOf(\"/kind\")!=-1){  //类别商品的排序\r\n                map.kind_id = [this.$route.params.id]\r\n            }\r\n            else if(this.$route.path.indexOf(\"/shop\")!=-1){\r\n                map.shop_id = [this.$route.params.id]\r\n            }\r\n            if(type==\"1\"){\r\n                map.desc = [key]     //降序 参数为关键词数组，可以对多个关键词进行排序\r\n            }else if(type == \"0\"){\r\n                map.asc = [key]  //升序\r\n            }\r\n            this.axios.post(\"/commodity/searchOrder\", map).then(response => {\r\n                if(response.status == 200){\r\n                    this.commodities = response.data.data.records;\r\n                    this.total = response.data.data.total;\r\n                }\r\n            }).catch(error => alert(error));\r\n        },\r\n\r\n        //点击按钮实现选中效果\r\n        changeButtonStyle(index){\r\n            var bt = document.querySelectorAll(\"a.bt\");     //选择所有class=\"bt\"的a元素\r\n            for(let i=0;i<bt.length;i++){\r\n                if(index == i){\r\n                    bt[i].classList.add(\"curr\");\r\n                }else{\r\n                    bt[i].classList.remove(\"curr\");\r\n                }\r\n            }\r\n        },\r\n\r\n\r\n        // 商家系统中的操作\r\n        //修改商品信息\r\n        updateCommodity(value){\r\n            this.item = value;\r\n            this.form = Object.assign({},value);\r\n            this.dialogVisible = true;\r\n        },\r\n        dialogHide(){\r\n            this.dialogVisible = false;\r\n        },\r\n        update(value){    //更改原值，vuex\r\n            this.item = value;\r\n        },\r\n    }\r\n}\r\n",{"version":3,"sources":["Commodities.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"Commodities.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"commodity\">\r\n        <!--商品排序-->\r\n        <h3 v-if=\"!commodities.length\">目前没有商品</h3>\r\n        <div v-if=\"commodities.length\">\r\n            <div class=\"commoidtySort\">\r\n                <div class=\"sort\">\r\n                    <a href=\"javascript:;\" class=\"bt curr\" @click=\"handleGetCommodityList(0,'price',0)\"><span>综合</span><i class=\"el-icon-d-caret\"></i></a>\r\n                    <a href=\"javascript:;\" class=\"bt\"  @click=\"handleGetCommodityList('1','inventory',1)\"><span>销量</span><i class=\"el-icon-d-caret\"></i></a>\r\n                    <a href=\"javascript:;\" class=\"bt\"  @click=\"handleGetCommodityList('1','evaluation_count',2)\"><span>评论数</span><i class=\"el-icon-d-caret\"></i></a>\r\n                    <a href=\"javascript:;\" class=\"bt\"  @click=\"handleGetCommodityList('1','price',3)\"><span>价格</span><i class=\"el-icon-d-caret\"></i>\r\n                        <!-- <em><i class=\"el-icon-caret-top\"></i><i class=\"el-icon-caret-bottom\"></i></em> -->\r\n                    </a>\r\n                </div>\r\n                <div class=\"selectPrice\">  \r\n                </div>\r\n                <div class=\"page\">\r\n                    <a href=\"javascript:;\" @click=\"prevPage\" class=\"prev\">&lt;</a>\r\n                    <a href=\"javascript:;\" @click=\"nextPage\" class=\"next\">&gt;</a>\r\n                </div>\r\n                <div class=\"result-sum\">\r\n                    共<span class=\"sum\">{{total}}+ </span>件商品 \r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <commodityList v-if=\"sell\" @update=\"update\" @updateCommodity='updateCommodity' :list = \"commodities\" :isNeedMask=\"true\" />   <!-- 商家加载 -->\r\n        <Dialog v-if=\"sell\" @update=\"update\" @dialogHide=\"dialogHide\" :dialogVisible=\"dialogVisible\" :addFlag=\"false\"  :form=\"form\"/>   <!-- 只有商家和管理员加载 -->\r\n\r\n\r\n        <commodityList v-if=\"!sell\" :list = \"commodities\"/>  <!-- 普通用户加载 -->\r\n\r\n        <h1>{{message}}</h1>\r\n        <el-pagination\r\n            :hide-on-single-page=\"commodities.length==0\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            @prev-click=\"handleCurrentChange\"\r\n            @next-click=\"handleCurrentChange\"\r\n            :current-page=currentPage\r\n            :page-sizes=pageSizes\r\n            :page-size=pageSize\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=total>\r\n        </el-pagination>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex';\r\nimport commodityList from '../components/CommodityList'\r\nimport Dialog from '../components/Dialog.vue'\r\nexport default {\r\n    name: 'commodity',\r\n    components: {\r\n      commodityList,Dialog\r\n    },\r\n    data(){\r\n        return {\r\n            commodities:[],\r\n            message: '',\r\n            sortType: 1,     //0为降序，1位升序\r\n            currentPage: 1,  //当前页数\r\n            total: 0, //总条数\r\n            pageSize: 10,  //页面大小，默认一页有10条\r\n            pageSizes: [10],  //分页数量\r\n            state:{ //记录当前排序状态\r\n                index: -1,\r\n                key: \"\"\r\n            },\r\n            form:{},//dialog组件传值,深拷贝后的\r\n            item:{},//商品card中的原值\r\n            dialogVisible: false,//dialog默认不显示           \r\n        }\r\n    },\r\n    computed:{\r\n        ...mapState('user',['user','sell']),\r\n    },\r\n    created(){\r\n        const url = this.$route.fullPath;\r\n        if(url.indexOf(\"/home\")!=-1){\r\n           this.getCommoditiesByHome();\r\n        }else if(url.indexOf(\"/shop\")!=-1){\r\n            this.getCommoditiesByShop(this.sell.id)\r\n        }\r\n    },\r\n    //分类商品、搜索结果、商家店铺商品都使用同一组件，但向服务端请求的接口不同，所以定义setRequestUrl方法来动态设置请求的URL \r\n   beforeRouteEnter(to, from, next){\r\n      next(vm => {\r\n        vm.title = to.meta.title;\r\n        if(to.fullPath.indexOf(\"/searchOrder\")!=-1){\r\n            let keyword = to.query.keyword;\r\n            vm.getCommoditiesBySearch(keyword);\r\n        }else if(to.path.indexOf(\"/shop\")!=-1){\r\n            vm.getCommoditiesByShop(to.params.id);\r\n        }else{\r\n            vm.getCommoditiesByKind(to.params.id);\r\n        }\r\n      });\r\n    },\r\n    \r\n    beforeRouteUpdate(to, from, next){\r\n        //在当前路由改变，但是该组件被复用时调用\r\n        if(to.fullPath.indexOf(\"/searchOrder\")!=-1){\r\n            let keyword = to.query.keyword;\r\n            this.getCommoditiesBySearch(keyword);\r\n        }else if(to.path.indexOf(\"/shop\")!=-1){\r\n            this.getCommoditiesByShop(to.params.id);\r\n        }else{\r\n            this.getCommoditiesByKind(to.params.id);\r\n        }\r\n        next(); //该函数之后组件实例才会被创建\r\n    },\r\n\r\n    //分类商品、搜索结果、商家店铺商品都使用同一组件，但向服务端请求的接口不同，所以定义不同的接口\r\n    methods:{\r\n        getCommoditiesByHome(){      //获取主页商品\r\n             this.axios.get('/commodity',{params:{page:this.currentPage}}).then(response => {\r\n                if(response.status == 200){\r\n                    this.commodities = response.data.data.records; \r\n                    this.total = response.data.data.total;\r\n                }\r\n            })\r\n        },\r\n\r\n        getCommoditiesByKind(kindID){       //类别使用的方法\r\n            this.axios.post(\"/commodity/searchOrder\",{kind_id:[kindID]}).then(response =>{\r\n                if(response.data.code==0){\r\n                    this.commodities = response.data.data.records;\r\n                    this.total = response.data.data.total;\r\n                }\r\n            }).catch(error => alert(error));\r\n        },\r\n\r\n        getCommoditiesBySearch(keyword){       //搜索框使用该方法\r\n            this.axios.post(\"/commodity/searchOrder\",{\"keyword\":[keyword]}).then(response =>{\r\n                if(response.status == 200){\r\n                    this.commodities = response.data.data.records;\r\n                    this.total = response.data.data.total;\r\n                }\r\n            }).catch(error => alert(error));\r\n        },\r\n\r\n        getCommoditiesByShop(shopID){   //获取店铺商品\r\n            this.axios.post(\"/commodity/searchOrder\",{shop_id:[shopID]}).then(response =>{\r\n                if(response.data.code==0){\r\n                    this.commodities = response.data.data.records;\r\n                    this.total = response.data.data.total;\r\n                }\r\n            }).catch(error => alert(error));\r\n        },\r\n\r\n        handleSizeChange(val){\r\n            console.log(\"每页条数：\"+val);\r\n        },\r\n\r\n        //当前页改变，获取当前页的商品\r\n        handleCurrentChange(val){\r\n            this.currentPage = val;\r\n            if(this.state.index != -1){   //说明处于排序状态\r\n                if(this.state.key == 'price' && this.state.index == 0)\r\n                    this.getCommodityList('0',this.state.key,this.state.index);\r\n                else this.getCommodityList('1',this.state.key,this.state.index);            \r\n            }else  \r\n                this.getCommoditiesByHome();\r\n        },\r\n        //向前翻页\r\n        prevPage(){\r\n            if(this.currentPage>1){\r\n                this.currentPage--;\r\n                if(this.state.index != -1){  \r\n                    if(this.state.key == 'price' && this.state.index == 0)\r\n                        this.getCommodityList('0',this.state.key,this.state.index);\r\n                    else this.getCommodityList('1',this.state.key,this.state.index);            \r\n                }else  \r\n                    this.getCommoditiesByHome();\r\n            }\r\n        },\r\n        //向后翻页\r\n        nextPage(){\r\n            if(this.currentPage<(this.total/this.pageSize)){\r\n                this.currentPage++;\r\n                if(this.state.index != -1){  \r\n                    if(this.state.key == 'price' && this.state.index == 0)\r\n                        this.getCommodityList('0',this.state.key,this.state.index);\r\n                    else this.getCommodityList('1',this.state.key,this.state.index);            \r\n                }else  \r\n                    this.getCommoditiesByHome();\r\n            }\r\n        },\r\n\r\n        handleGetCommodityList(type, key, index){\r\n            this.currentPage = 1;      //切换排序时重置为第一页\r\n            this.getCommodityList(type, key, index);\r\n        },\r\n        //获取排序后的商品列表\r\n        getCommodityList(type, key, index){\r\n            this.state.index = index;\r\n            this.state.key = key;\r\n            this.changeButtonStyle(index);\r\n            var map = {};\r\n            map.page = [this.currentPage];\r\n            map.pageSize = [this.pageSize];  // 添加这一行\r\n            if(this.$route.fullPath.indexOf(\"/searchOrder\")!=-1){   //带关键词的排序\r\n               map.keyword = [this.$route.query.keyword]\r\n            }\r\n            else if(this.$route.path.indexOf(\"/kind\")!=-1){  //类别商品的排序\r\n                map.kind_id = [this.$route.params.id]\r\n            }\r\n            else if(this.$route.path.indexOf(\"/shop\")!=-1){\r\n                map.shop_id = [this.$route.params.id]\r\n            }\r\n            if(type==\"1\"){\r\n                map.desc = [key]     //降序 参数为关键词数组，可以对多个关键词进行排序\r\n            }else if(type == \"0\"){\r\n                map.asc = [key]  //升序\r\n            }\r\n            this.axios.post(\"/commodity/searchOrder\", map).then(response => {\r\n                if(response.status == 200){\r\n                    this.commodities = response.data.data.records;\r\n                    this.total = response.data.data.total;\r\n                }\r\n            }).catch(error => alert(error));\r\n        },\r\n\r\n        //点击按钮实现选中效果\r\n        changeButtonStyle(index){\r\n            var bt = document.querySelectorAll(\"a.bt\");     //选择所有class=\"bt\"的a元素\r\n            for(let i=0;i<bt.length;i++){\r\n                if(index == i){\r\n                    bt[i].classList.add(\"curr\");\r\n                }else{\r\n                    bt[i].classList.remove(\"curr\");\r\n                }\r\n            }\r\n        },\r\n\r\n\r\n        // 商家系统中的操作\r\n        //修改商品信息\r\n        updateCommodity(value){\r\n            this.item = value;\r\n            this.form = Object.assign({},value);\r\n            this.dialogVisible = true;\r\n        },\r\n        dialogHide(){\r\n            this.dialogVisible = false;\r\n        },\r\n        update(value){    //更改原值，vuex\r\n            this.item = value;\r\n        },\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.commodity{\r\n    width: 1200px;\r\n    margin: 0 auto;\r\n    padding-bottom: 50px;\r\n    font-size: 12px;\r\n}\r\n.commodity .commoidtySort{\r\n    padding: 6px 8px;\r\n    border-bottom: 1px solid #E7E3E7;\r\n    background: #F1F1F1;\r\n    overflow: hidden;\r\n}\r\n.commodity .commoidtySort .sort .curr{\r\n    border-color: #e4393c;\r\n    background: #e4393c;\r\n    color: #FFF;\r\n}\r\n.commoidtySort .sort a{\r\n    float: left;\r\n    padding: 0 9px;\r\n    height: 23px;\r\n    border: 1px solid #CCC;\r\n    line-height: 23px;\r\n    text-decoration: none;\r\n    color: black;\r\n}\r\n.commoidtySort .result-sum{\r\n    float: right;\r\n    height: 25px;\r\n    line-height: 25px;\r\n    margin-right: 10px;\r\n    margin-right: 10px;\r\n    color: #999;\r\n}\r\n\r\n.commoidtySort .result-sum .sum{\r\n    color: #666;\r\n    font-family: verdana;\r\n}\r\n.commoidtySort .sort a:hover{\r\n    color: red;\r\n    border-color: red;\r\n}\r\n.commoidtySort .page{\r\n    float: right;\r\n}\r\n.commoidtySort .page a:hover{\r\n    border-color: rgb(233, 103, 103);\r\n}\r\n.commoidtySort .page .prev,.next{\r\n    display: inline-block;\r\n    width: 46px;\r\n    height: 23px;\r\n    border: 1px solid #DDD;\r\n    background: #FFF;\r\n    line-height: 23px;\r\n    font-family: \"\\5b8b\\4f53\";\r\n    text-align: center;\r\n    font-size: 16px;\r\n    color: #AAA;\r\n    text-decoration: none;\r\n}\r\n</style>"]}]}