{"remainingRequest":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SpringBootVueSecondShop\\client\\Snackstore\\src\\views\\Order.vue?vue&type=style&index=0&id=3c1ef684&scoped=true&lang=css&","dependencies":[{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\src\\views\\Order.vue","mtime":1717318271535},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.order{\n    width: 1030px;\n    margin: 0 auto;\n    margin-top: 50px;\n}\n",{"version":3,"sources":["Order.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgOA;AACA;AACA;AACA;AACA","file":"Order.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"order\">\r\n        <el-table :data=\"orders\" stripe style=\"width: 100%\">\r\n            <el-table-column width=\"30\"></el-table-column>\r\n            <el-table-column prop=\"commodityId\"  label=\"商品ID\"  width=\"80\"></el-table-column>\r\n            <el-table-column prop=\"quantity\"  label=\"数量\"  width=\"80\"></el-table-column>\r\n            <el-table-column prop=\"amount\" label=\"总价\"  width=\"100\"></el-table-column>\r\n            <el-table-column  prop=\"creatTime\" label=\"订单开始时间\" width=\"200\"></el-table-column>\r\n            <el-table-column prop=\"endTime\" label=\"订单结束时间\"  width=\"200\"></el-table-column>\r\n            <el-table-column prop=\"status\" label=\"标签\" width=\"140\"\r\n                :filters=\"[{ text: '待支付', value: 0}, { text: '取消订单', value: 1 },\r\n                            { text: '待发货', value: 2}, { text: '已收货', value: 4 },\r\n                            { text: '退货审核中', value: 5 },{ text: '已退货', value: 6},\r\n                            { text: '拒绝退货', value: 7},{ text: '已完成', value: 8} ]\"\r\n                :filter-method=\"filterTag\"\r\n                filter-placement=\"bottom-end\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-tag\r\n                    :type=\"scope.row.status === 8 ? 'success' : 'primary'\"\r\n                    disable-transitions>{{scope.row.status | formatStatus }}</el-tag>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"用户操作\" width=\"200\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button v-if=\"determineType(scope.row.status,'付款')\" size=\"mini\" type=\"danger\" @click=\"handlePay(scope.row)\">付款</el-button>\r\n                    <el-button v-if=\"determineType(scope.row.status,'取消订单')\" size=\"mini\"  @click=\"handleCancelPay(scope.row)\">取消订单</el-button>\r\n                    <el-button v-if=\"determineType(scope.row.status,'退货')\" size=\"mini\" type=\"danger\"  @click=\"handleReturnGoods(scope.row)\">退货</el-button>\r\n                    <el-button v-if=\"determineType(scope.row.status,'确认订单')\" size=\"mini\"  @click=\"handleConfirm(scope.row)\">确认订单</el-button>\r\n                    <el-button v-if=\"determineType(scope.row.status,'取消退货')\" size=\"mini\"  @click=\"handleCancelReturn(scope.row)\">取消退货</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { mapState } from 'vuex'\r\nexport default {\r\n    name:\"order\",\r\n    data(){\r\n        return{\r\n            orders:[],\r\n        }\r\n    },\r\n    created(){\r\n        this.axios.get(\"/order/user/\"+this.user.id,{params:{page:1}}).then(response => {\r\n            if(response.status == 200){\r\n                this.orders = response.data.data.records;\r\n            }\r\n        })\r\n    },\r\n    computed:{\r\n        ...mapState('user',['user']),\r\n    },\r\n    methods:{\r\n        filterTag(value, row) {\r\n            return row.status === value;\r\n        },\r\n\r\n        //付款\r\n        handlePay(row){\r\n            this.$confirm(\"确认支付?\").then(() =>{\r\n                this.axios.post(\"/order/pay\",[row]).then(response => {\r\n                    if(response.data.code == 0){\r\n                        this.$message({type:'success',message:\"支付成功！\"})\r\n                        row.status = 2\r\n                    }else{\r\n                        this.$message(response.data.msg)\r\n                    }\r\n                }).catch(() => {error => alert(error)});\r\n            }).catch(()=>{})\r\n        },\r\n\r\n        //取消订单\r\n        handleCancelPay(row){\r\n            this.$confirm(\"确认取消清单?\").then(() =>{\r\n                 let old = row.status;\r\n                 row.status = 1\r\n                 let ordEndTime = row.endTime\r\n                 row.endTime = this.formatDate(new Date(),'YY-MM-DD hh:mm:ss')\r\n                 this.axios.post(\"/order/update\",row).then(response => {\r\n                    if(response.data.code == 0){\r\n                        this.$message({type:'success',message:\"取消订单成功！\"})\r\n                    }else{\r\n                        this.$message(response.data.msg)\r\n                        row.status = old\r\n                        row.endTime = ordEndTime\r\n                    }\r\n                }).catch(() => {error => alert(error)});\r\n            }).catch(()=>{})\r\n        },\r\n\r\n        //退货\r\n        handleReturnGoods(row){\r\n            this.$confirm(\"确认提交退货申请?\").then(() =>{\r\n                 let old = row.status;\r\n                 row.status = 5\r\n                 this.axios.post(\"/order/update\",row).then(response => {\r\n                    if(response.data.code == 0){\r\n                        this.$message({type:'success',message:\"申请退货成功，请等待商家回应！\"})\r\n                    }else{\r\n                        this.$message(response.data.msg)\r\n                        row.status = old\r\n                    }\r\n                }).catch(() => {error => alert(error)});\r\n            }).catch(()=>{})\r\n        },\r\n        \r\n        //取消退货\r\n        handleCancelReturn(row){\r\n            this.$confirm(\"确认取消退货? 确认后订单不能再次退货！\").then(() =>{\r\n                 let oldStatus = row.status;\r\n                 row.status = 8\r\n                 let ordEndTime = row.endTime\r\n                 row.endTime = this.formatDate(new Date(),'YY-MM-DD hh:mm:ss')\r\n                 this.axios.post(\"/order/update\",row).then(response => {\r\n                    if(response.data.code == 0){\r\n                        this.$message({type:'success',message:\"取消退货成功，该订单已完成！\"})\r\n                    }else{\r\n                        this.$message(response.data.msg)\r\n                        row.status = oldStatus\r\n                        row.endTime = ordEndTime\r\n                    }\r\n                }).catch(() => {error => alert(error)});\r\n            }).catch(()=>{})\r\n        },\r\n        //确认订单\r\n        handleConfirm(row){\r\n            this.$confirm(\"确认订单已完成？\").then(() =>{\r\n                 let old = row.status;\r\n                 row.status = 8\r\n                 let ordEndTime = row.endTime\r\n                 row.endTime = this.formatDate(new Date(),'YY-MM-DD hh:mm:ss')\r\n                 this.axios.post(\"/order/update\",row).then(response => {\r\n                    if(response.data.code == 0){\r\n                        this.$message({type:'success',message:\"确认成功，该订单已完成！\"})\r\n                    }else{\r\n                        this.$message(response.data.msg)\r\n                        row.status = old\r\n                        row.endTime = ordEndTime\r\n                    }\r\n                }).catch(() => {error => alert(error)});\r\n            }).catch(()=>{})\r\n        },\r\n        \r\n        //判断订单处于哪一阶段，显示该阶段的操作\r\n        determineType(status, operation){\r\n            if(operation == \"付款\"){\r\n                if(status == 0) return true\r\n            }else if(operation == \"取消订单\"){\r\n                if(status == 0) return true\r\n            }else if(operation == \"退货\"){\r\n                if(status == 4 || status == 3) return true\r\n            }else if(operation == \"取消退货\"){\r\n                if(status == 5) return true\r\n            }else{\r\n                if(status == 4 || status == 6 || status == 3) return true\r\n            }\r\n            return false\r\n        },\r\n\r\n        //格式化时间\r\n//      formatDate(new Date().getTime());//2017-05-12 10:05:44\r\n//      formatDate(new Date().getTime(),'YY年MM月DD日');//2017年05月12日\r\n//      formatDate(new Date().getTime(),'今天是YY/MM/DD hh:mm:ss');//今天是2017/05/12 10:07:45\r\n        formatDate(time,format='YY-MM-DD hh:mm:ss'){\r\n            var date = new Date(time);\r\n        \r\n            var year = date.getFullYear(),\r\n                month = date.getMonth()+1,//月份是从0开始的\r\n                day = date.getDate(),\r\n                hour = date.getHours(),\r\n                min = date.getMinutes(),\r\n                sec = date.getSeconds();\r\n            var preArr = Array.apply(null,Array(10)).map(function(elem, index) {\r\n                return '0'+index;\r\n            });////开个长度为10的数组 格式为 00 01 02 03       \r\n            var newTime = format.replace(/YY/g,year)\r\n                                .replace(/MM/g,preArr[month]||month)\r\n                                .replace(/DD/g,preArr[day]||day)\r\n                                .replace(/hh/g,preArr[hour]||hour)\r\n                                .replace(/mm/g,preArr[min]||min)\r\n                                .replace(/ss/g,preArr[sec]||sec);        \r\n            return newTime;         \r\n        }\r\n    },\r\n    filters:{\r\n        formatStatus(val){\r\n            let value = \"\";\r\n            switch(val) {\r\n                case 0:\r\n                    value = \"待支付\";\r\n                    break;\r\n                case 1:\r\n                    value = \"已取消\";\r\n                    break;\r\n                case 2:\r\n                    value = \"待发货\";\r\n                    break;\r\n                case 3:\r\n                    value = \"运输中\";\r\n                    break;\r\n                case 4:\r\n                    value = \"已收货\";\r\n                    break;\r\n                case 5:\r\n                    value = \"退货审核中\";\r\n                    break;\r\n                case 6:\r\n                    value = \"已退货\";\r\n                    break;\r\n                case 7:\r\n                    value = \"拒绝退货\";\r\n                    break;\r\n                case 8:\r\n                    value = \"已完成\";\r\n                    break;                    \r\n            }\r\n            return value;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .order{\r\n        width: 1030px;\r\n        margin: 0 auto;\r\n        margin-top: 50px;\r\n    }\r\n</style>"]}]}