{"remainingRequest":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SpringBootVueSecondShop\\client\\Snackstore\\src\\views\\ShoppingCart.vue?vue&type=style&index=0&id=0a4f6c3c&scoped=true&lang=css&","dependencies":[{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\src\\views\\ShoppingCart.vue","mtime":1624836882000},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SpringBootVueSecondShop\\client\\Snackstore\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.shoppingCart {\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  width: 1080px;\r\n  margin-top: 50px;\r\n}\r\n.shoppingCart span {\r\n  float: right;\r\n  padding-right: 15px;\r\n}\r\n.shoppingCart .checkout{\r\n    float: right;\r\n    width: 60px;\r\n    height: 30px;\r\n    margin: 0;\r\n    border: none;\r\n    color: white;\r\n    background-color: red;\r\n    cursor: pointer;\r\n}\r\n\r\n.shoppingCart p{\r\n  margin-top: 10px;\r\n}\r\n\r\n.shoppingCart .operation{\r\n  float: right;\r\n}\r\n",{"version":3,"sources":["ShoppingCart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"ShoppingCart.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"shoppingCart\">\r\n    <el-button class=\"operation\" size=\"mini\" @click=\"handleSetCartItems\">清空购物车</el-button>\r\n    <el-button class=\"operation\" size=\"mini\" @click=\"handleDeleteCartItem\">删除</el-button>\r\n    <el-table :data=\"commodities\" stripe  @selection-change=\"handleSelectionChange\" style=\"width: 100%\">\r\n      <el-table-column type=\"selection\" width=\"50\"></el-table-column>\r\n      <el-table-column prop=\"name\"  label=\"商品名称\"  width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"shopName\"  label=\"店铺\"  width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"price\" label=\"单价\" :formatter=\"formatterPrice\" width=\"180\"></el-table-column>\r\n      <el-table-column  prop=\"quantity\" label=\"数量\" width=\"130\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"180\">\r\n        <template slot-scope=\"scope\"> \r\n          <el-button size=\"mini\" @click=\"handleSubtract(scope.row)\">-</el-button>\r\n          <el-button size=\"mini\" @click=\"handleAdd(scope.row)\">+</el-button>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"amount\" label=\"金额\" :formatter=\"formatterAmount\" width=\"180\"></el-table-column>\r\n    </el-table>\r\n    <p>\r\n      <span><button class=\"checkout\" @click=\"checkout\">结算</button></span>\r\n      <span>总价：{{ cartTotalPrice | currency}}</span>\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapMutations, mapState } from 'vuex'\r\nexport default {\r\n  name: \"ShoppingCart\",\r\n  created(){\r\n      this.axios.get(\"/shoppingCart/\"+this.user.id,{params:{page:1}}).then(response => {\r\n        if(response.status == 200){\r\n          this.getItems(response.data.data.records);\r\n        }\r\n      })\r\n  },\r\n  computed: {\r\n    ...mapState('cart', {\r\n      commodities: 'items'\r\n    }),\r\n    ...mapState('user',['user']),\r\n  },\r\n\r\n  data(){\r\n    return{\r\n      cartTotalPrice: 0,   //要结算的商品总价\r\n      selectCartItems:[], //选中的商品\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    formatterAmount(row){\r\n      return (row.quantity * row.price * row.discount).toFixed(2);  //保留两位小数（四舍五入）\r\n    },\r\n    formatterPrice(row){\r\n      return row.discount * row.price;\r\n    },\r\n    ...mapMutations('cart',['getItems','reduceItemQuantity','deleteCartItem','incrementItemQuantity','setCartItems','getPayItems']),\r\n\r\n    //减少数量\r\n    handleSubtract(row){\r\n      var quantity = row.quantity -1; \r\n      if(quantity <= 0){\r\n        this.$confirm('您确定要删除商品吗？').then(() => {\r\n            this.axios.post('shoppingCart/delete',[row]).then(response => {\r\n              if(response.data.code == 0){\r\n                this.deleteCartItem([row]);\r\n              }\r\n            }).catch(() =>{error => alert(error)});\r\n        }).catch(() => {});\r\n      }\r\n      else{\r\n        this.reduceItemQuantity({id:row.id,quantity:1})\r\n        this.updateShoppingCartItem(row);\r\n      }        \r\n    },\r\n\r\n    //增加数量\r\n    handleAdd(row){\r\n      this.incrementItemQuantity({id:row.id,quantity:1});\r\n      this.updateShoppingCartItem(row);        \r\n    },\r\n\r\n    //更改购物车\r\n    updateShoppingCartItem(row){\r\n      this.axios.post('shoppingCart/update',row)\r\n    },\r\n\r\n    //选中购物车商品\r\n    handleSelectionChange(val){   //val(Array)\r\n      this.selectCartItems = val;\r\n      this.cartTotalPrice = val.reduce((total, product) => {\r\n        return total + product.price * product.discount * product.quantity\r\n      },0).toFixed(2)\r\n    },\r\n\r\n    //选择商品删除（可多选）\r\n    handleDeleteCartItem(){\r\n      if(this.selectCartItems.length == 0)\r\n        this.$message(\"请先选择要删除商品！\")\r\n      else{\r\n        this.axios.post('shoppingCart/delete',this.selectCartItems).then(response => {\r\n          if(response.data.code == 0){\r\n            this.deleteCartItem(this.selectCartItems)\r\n          }\r\n        }).catch(() =>{error => alert(error)});\r\n      }\r\n    },\r\n\r\n    //清空购物车\r\n    handleSetCartItems(){\r\n      this.$confirm('确定要清空购物车吗？').then(() => {\r\n            this.axios.post('shoppingCart/delete',this.commodities).then(response => {\r\n              if(response.data.code == 0){\r\n                this.setCartItems();\r\n              }\r\n            }).catch(() =>{error => alert(error)});\r\n        }).catch(() => {});\r\n    },\r\n\r\n    //结算\r\n    checkout(){\r\n      if(this.selectCartItems!=0){\r\n        this.getPayItems(this.selectCartItems);\r\n        this.$router.push(\"/check\");\r\n      }else{\r\n        this.$message(\"请先选择商品！\");\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.shoppingCart {\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  width: 1080px;\r\n  margin-top: 50px;\r\n}\r\n.shoppingCart span {\r\n  float: right;\r\n  padding-right: 15px;\r\n}\r\n.shoppingCart .checkout{\r\n    float: right;\r\n    width: 60px;\r\n    height: 30px;\r\n    margin: 0;\r\n    border: none;\r\n    color: white;\r\n    background-color: red;\r\n    cursor: pointer;\r\n}\r\n\r\n.shoppingCart p{\r\n  margin-top: 10px;\r\n}\r\n\r\n.shoppingCart .operation{\r\n  float: right;\r\n}\r\n</style>"]}]}