{"remainingRequest":"D:\\Snackstore\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Snackstore\\src\\views\\Checkout.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Snackstore\\src\\views\\Checkout.vue","mtime":1624836882000},{"path":"D:\\Snackstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Snackstore\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Snackstore\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Snackstore\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters, mapState } from 'vuex'\r\nexport default {\r\n  name: \"checkout\",\r\n  computed: {\r\n    ...mapState('cart',['payItems']),\r\n    ...mapState('user',['user']),\r\n    ...mapGetters('cart',['totalPrice']),\r\n  },\r\n  methods: {\r\n    formatterAmount(row){\r\n      return (row.quantity * row.price * row.discount).toFixed(2);  //保留两位小数（四舍五入）\r\n    },\r\n    formatterPrice(row){\r\n      return row.discount * row.price;\r\n    },\r\n\r\n    //提交订单\r\n    submitOrder(){\r\n      this.$confirm(\"确认提交订单？\").then(() => {\r\n        this.axios.post(\"/shoppingCart/checkOut\",this.payItems).then(response => {\r\n          if(response.data.code == 0){\r\n            this.$router.replace(\"/order\")\r\n          }else{\r\n            this.$message(response.data.msg);\r\n          }\r\n        }).catch(() =>{error => alert(error)});\r\n      }).catch(() => {});\r\n    },\r\n  }\r\n};\r\n",{"version":3,"sources":["Checkout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Checkout.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"shoppingCart\">\r\n    <el-table :data=\"payItems\" stripe style=\"width: 100%\">\r\n      <el-table-column prop=\"name\"  label=\"商品名称\"  width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"shopName\"  label=\"店铺\"  width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"price\" label=\"单价\" :formatter=\"formatterPrice\" width=\"180\"></el-table-column>\r\n      <el-table-column  prop=\"quantity\" label=\"数量\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"amount\" label=\"金额\" :formatter=\"formatterAmount\" width=\"180\"></el-table-column>\r\n    </el-table>\r\n    <p>\r\n      <span><el-button size=\"mini\" class=\"submit\" @click=\"submitOrder\">提交订单</el-button></span>\r\n      <span>总价：{{ totalPrice | currency}}</span>\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapState } from 'vuex'\r\nexport default {\r\n  name: \"checkout\",\r\n  computed: {\r\n    ...mapState('cart',['payItems']),\r\n    ...mapState('user',['user']),\r\n    ...mapGetters('cart',['totalPrice']),\r\n  },\r\n  methods: {\r\n    formatterAmount(row){\r\n      return (row.quantity * row.price * row.discount).toFixed(2);  //保留两位小数（四舍五入）\r\n    },\r\n    formatterPrice(row){\r\n      return row.discount * row.price;\r\n    },\r\n\r\n    //提交订单\r\n    submitOrder(){\r\n      this.$confirm(\"确认提交订单？\").then(() => {\r\n        this.axios.post(\"/shoppingCart/checkOut\",this.payItems).then(response => {\r\n          if(response.data.code == 0){\r\n            this.$router.replace(\"/order\")\r\n          }else{\r\n            this.$message(response.data.msg);\r\n          }\r\n        }).catch(() =>{error => alert(error)});\r\n      }).catch(() => {});\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.shoppingCart {\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  width: 900px;\r\n  margin-top: 50px;\r\n}\r\n.shoppingCart span {\r\n  float: right;\r\n  padding-right: 15px;\r\n}\r\n\r\n.shoppingCart .submit{\r\n    float: right;\r\n    height: 30px;\r\n    margin: 0;\r\n    border: none;\r\n    color: white;\r\n    background-color: red;\r\n    cursor: pointer;\r\n}\r\n\r\n.shoppingCart p{\r\n  margin-top: 10px;\r\n}\r\n</style>"]}]}